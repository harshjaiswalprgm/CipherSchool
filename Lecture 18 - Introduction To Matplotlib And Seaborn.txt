### Introduction to Matplotlib and Seaborn

#### Installing and Importing Libraries

First, ensure you have the required libraries installed:
```python
pip install matplotlib seaborn
```

Import the necessary libraries:
```python
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd
```

### Creating Plots with Matplotlib

#### Line Plot
```python
# Data
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Create a line plot
plt.plot(x, y, linestyle=':', color='r', linewidth=3, marker='*', mec='r', ms=10)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Simple Line Plot')
plt.show()
```

#### Multiple Line Plots
```python
# Data
y1 = np.array([3, 8, 1, 10])
y2 = np.array([6, 2, 7, 11])

# Plotting two lines
plt.plot(y1)
plt.plot(y2)
plt.show()
```

#### Scatter Plot
```python
# Data
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Create a scatter plot
plt.scatter(x, y, color='r')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Simple Scatter Plot')
plt.show()
```

#### Bar Plot
```python
# Data
products = ['PC', 'TV', 'Refrigerator', 'Microwave']
sales = [4, 7, 1, 8]

# Creating a bar plot
plt.bar(products, sales, color='black', width=0.5)
plt.xlabel('Products')
plt.ylabel('Sales')
plt.title('Simple Bar Plot')
plt.show()
```

#### Horizontal Bar Plot
```python
# Creating a horizontal bar plot
plt.barh(products, sales, color='black', height=0.5)
plt.xlabel('Sales')
plt.ylabel('Products')
plt.title('Simple Horizontal Bar Plot')
plt.show()
```

#### Histogram
```python
# Data
data = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]

# Creating a histogram
plt.hist(data, bins=4)
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.title('Simple Histogram')
plt.show()
```

#### Subplots
```python
# Data
x = [1, 2, 3, 4, 5]
y1 = [2, 3, 5, 7, 11]
y2 = [1, 4, 6, 8, 10]

# Creating subplots
fig, axs = plt.subplots(2)

axs[0].plot(x, y1)
axs[0].set_title('First Plot')
axs[1].plot(x, y2, 'tab:orange')
axs[1].set_title('Second Plot')

# Displaying the plot
plt.tight_layout()
plt.show()
```

#### Adding Annotations
```python
# Data
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Creating a plot with annotations
plt.plot(x, y)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Plot with Annotations')
plt.annotate('Peak', xy=(5, 11), xytext=(4, 10),
             arrowprops=dict(color='black', shrink=0.05))
plt.show()
```

### Creating Plots with Seaborn

#### Line Plot
```python
# Data
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Creating a line plot
sns.lineplot(x=x, y=y)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Simple Line Plot with Seaborn')
plt.show()
```

#### Bar Plot
```python
# Data
categories = ['A', 'B', 'C', 'D']
values = [4, 7, 1, 8]

# Creating a bar plot
sns.barplot(x=categories, y=values)
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Simple Bar Plot with Seaborn')
plt.show()
```

#### Pair Plot
```python
# Loading dataset
iris_data = sns.load_dataset("iris")

# Creating a pair plot
sns.pairplot(iris_data, hue='species')
plt.title('Pair Plot with Seaborn')
plt.show()
```

#### Heatmap
```python
# Data
data = np.random.rand(10, 12)

# Creating a heatmap
sns.heatmap(data)
plt.title('Heatmap with Seaborn')
plt.show()
```

### Summary

Matplotlib and Seaborn are powerful libraries for data visualization in Python. Matplotlib is more versatile and allows for detailed customization, while Seaborn is built on top of Matplotlib and provides a high-level interface for drawing attractive and informative statistical graphics. By leveraging these tools, you can create a wide range of visualizations to effectively communicate your data insights.